ps <- seq(0, 1, by = 0.1)
start.time <- Sys.time()
min_levels <- trunc_mle(clt_mix, thetas)
print(Sys.time() - start.time)
mu_mle_corr <- min_levels[[1]]
mu_mle_corr
p_mle <- min_levels[[2]]
p_mle
min_levels
# calculate maximum likelihood estimator for truncated likelihood function;
# if publication probability for non-significant studies ("p") is not given,
# a grid search is performed for all possible thetas and p in [0, 1]
trunc_mle <- function(dat, thetas, p) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
if (missing(p)){
ps <- seq(0, 1, by = 0.01)
trunc_likeli_helper <- function(theta_p, dat) {
-prod(trunc_likeli(dat, theta_p[[1]], theta_p[[2]]))
}
T_corr_mle <- gridSearch(fun = trunc_likeli_helper,
levels = list(thetas, ps), dat = dat,
method = "multicore")
mu_corr_mle <- T_corr_mle$minlevels[1] * dat$sgm_th[1]
p_mle <- T_corr_mle$minlevels[2]
return(c(mu_corr_mle, p_mle))
} else {
likelihoods <- sapply(thetas,
function(theta) prod(trunc_likeli(dat, theta, p)))
#plot(thetas, likelihoods, type = "l")
T_corr_mle <- thetas[which(max(likelihoods) == likelihoods)]
mu_corr_mle <- T_corr_mle * dat$sgm_th[1]
return(mu_corr_mle)
}
}
# calculate mle without known p
ps <- seq(0, 1, by = 0.1)
start.time <- Sys.time()
min_levels <- trunc_mle(clt_mix, thetas)
print(Sys.time() - start.time)
min_levels
# calculate mle with known p
theta0 <- mean(clt_mix$Tn)/clt_mix$sgm_th[1]
theta0
# calculate mle with known p
theta_0 <- mean(clt_mix$Tn)/clt_mix$sgm_th[1]
thetas <- seq(theta_0-2, theta_0, by = 0.001) # theta = mu / sgm_th
mu_mle_corr <- trunc_mle(clt_mix, thetas, p = 0.1)
mu_mle_corr
# calculate mle without known p
ps <- seq(0, 1, by = 0.01)
start.time <- Sys.time()
min_levels <- trunc_mle(clt_mix, thetas)
print(Sys.time() - start.time)
mu_mle_corr <- min_levels[1]
mu_mle_corr
p_mle <- min_levels[2]
p_mle
reise <- 40
reise <- 100
unterkunft <- (450+300)/2
reise+unterkunft
594+200
470*1.16
dnorm(1.64)
pnorm(1.64)
dnorm(1.64)/pnorm(1.64)
dnorm(2)/pnorm(1.64)
dnorm(2)/pnorm(2)
dnorm(2)/pnorm(2)*1
calc_filedrawer <- function(dat, z_x) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(Z)
q <- qnorm(1 - alph)
if (missing(z_x)){
filedrawer <- (k * z_k / q)^2 - k
} else {
filedrawer <- -((-q^2 + 2 * k * z_k * z_x) -
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
dat
clt_sig
calc_filedrawer(clt_sig)
calc_filedrawer <- function(dat, z_x) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(z)
q <- qnorm(1 - alph)
if (missing(z_x)){
filedrawer <- (k * z_k / q)^2 - k
} else {
filedrawer <- -((-q^2 + 2 * k * z_k * z_x) -
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
calc_filedrawer(clt_sig)
calc_filedrawer(clt_sig, -0.4)
calc_filedrawer(clt_sig, -0.1)
calc_filedrawer(clt_sig, -0.02)
calc_filedrawer(clt_sig, 0)
calc_filedrawer(clt_sig, -2)
styler:::style_selection()
calc_filedrawer <- function(dat, exact = F) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(z)
q <- qnorm(1 - alph)
if (exact == F){
filedrawer <- (k * z_k / q)^2 - k
} else {
z_x <- -dnorm(q) / pnorm(q)
filedrawer <- -((-q^2 + 2 * k * z_k * z_x) -
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
q <- 1.64
z_x <- -dnorm(q) / pnorm(q)
z_x
calc_filedrawer(clt_sig, exact = F)
calc_filedrawer(clt_sig, exact = T)
calc_filedrawer <- function(dat, exact = F) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(z)
q <- qnorm(1 - alph)
if (exact == F){
filedrawer <- (k * z_k / q)^2 - k
} else {
z_x <- -dnorm(q) / pnorm(q)
filedrawer <- -((-q^2 + 2 * k * z_k * z_x) +
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
calc_filedrawer(clt_sig, exact = T)
calc_filedrawer <- function(dat, exact = F) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(z)
q <- qnorm(1 - alph)
if (exact == F){
filedrawer <- (k * z_k / q)^2 - k
} else {
z_x <- -dnorm(q) / pnorm(q)
# filedrawer <- -((-q^2 + 2 * k * z_k * z_x) -
#                   q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
#                (2 * z_x^2)
filedrawer <- (-2 * k * z_k * z_x + q^2 +
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
calc_filedrawer(clt_sig, exact = T)
calc_filedrawer(clt_sig, exact = F)
calc_filedrawer <- function(dat, exact = F) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(z)
#q <- qnorm(1 - alph)
q <- qnorm(1 - 0.5)
if (exact == F){
filedrawer <- (k * z_k / q)^2 - k
} else {
z_x <- -dnorm(q) / pnorm(q)
# filedrawer <- -((-q^2 + 2 * k * z_k * z_x) -
#                   q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
#                (2 * z_x^2)
filedrawer <- (-2 * k * z_k * z_x + q^2 +
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
calc_filedrawer(clt_sig, exact = F)
calc_filedrawer(clt_sig, exact = T)
qnorm(0.5)
#q <- qnorm(1 - alph)
q <- qnorm(1 - 0.2)
calc_filedrawer <- function(dat, exact = F) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(z)
#q <- qnorm(1 - alph)
q <- qnorm(1 - 0.2)
if (exact == F){
filedrawer <- (k * z_k / q)^2 - k
} else {
z_x <- -dnorm(q) / pnorm(q)
# filedrawer <- -((-q^2 + 2 * k * z_k * z_x) -
#                   q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
#                (2 * z_x^2)
filedrawer <- (-2 * k * z_k * z_x + q^2 +
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
calc_filedrawer(clt_sig, exact = T)
calc_filedrawer(clt_sig, exact = F)
calc_filedrawer <- function(dat, exact = F) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(z)
#q <- qnorm(1 - alph)
q <- qnorm(1 - 0.2)
if (exact == F){
filedrawer <- (k * z_k / q)^2 - k
} else {
z_x <- -dnorm(q) / pnorm(q)
# filedrawer <- -((-q^2 + 2 * k * z_k * z_x) -
#                   q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
#                (2 * z_x^2)
filedrawer <- (-2 * k * z_k * z_x + q^2 -
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
calc_filedrawer(clt_sig, exact = F)
calc_filedrawer(clt_sig, exact = T)
#q <- qnorm(1 - alph)
q <- qnorm(1 - 0.2)
z_x <- -dnorm(q) / pnorm(q)
z_x
calc_filedrawer <- function(dat, exact = F) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(z)
#q <- qnorm(1 - alph)
q <- qnorm(1 - 0.05)
if (exact == F){
filedrawer <- (k * z_k / q)^2 - k
} else {
z_x <- -dnorm(q) / pnorm(q)
# filedrawer <- -((-q^2 + 2 * k * z_k * z_x) -
#                   q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
#                (2 * z_x^2)
filedrawer <- (-2 * k * z_k * z_x + q^2 +
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
calc_filedrawer(clt_sig, exact = F)
calc_filedrawer(clt_sig, exact = T)
calc_filedrawer <- function(dat, exact = F) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(z)
#q <- qnorm(1 - alph)
q <- qnorm(1 - 0.05)
if (exact == F){
filedrawer <- (k * z_k / q)^2 - k
} else {
z_x <- -dnorm(q) / pnorm(q)
# filedrawer <- -((-q^2 + 2 * k * z_k * z_x) -
#                   q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
#                (2 * z_x^2)
filedrawer <- (-2 * k * z_k * z_x + q^2 -
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
calc_filedrawer(clt_sig, exact = T)
calc_filedrawer <- function(dat, exact = F) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(z)
#q <- qnorm(1 - alph)
q <- qnorm(1 - 0.001)
if (exact == F){
filedrawer <- (k * z_k / q)^2 - k
} else {
z_x <- -dnorm(q) / pnorm(q)
# filedrawer <- -((-q^2 + 2 * k * z_k * z_x) -
#                   q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
#                (2 * z_x^2)
filedrawer <- (-2 * k * z_k * z_x + q^2 -
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
calc_filedrawer(clt_sig, exact = T)
calc_filedrawer(clt_sig, exact = F)
calc_filedrawer <- function(dat, exact = F) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(z)
#q <- qnorm(1 - alph)
q <- qnorm(1 - 0.001)
if (exact == F){
filedrawer <- (k * z_k / q)^2 - k
} else {
z_x <- -dnorm(q) / pnorm(q)
# filedrawer <- -((-q^2 + 2 * k * z_k * z_x) -
#                   q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
#                (2 * z_x^2)
filedrawer <- (-2 * k * z_k * z_x + q^2 +
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
calc_filedrawer(clt_sig, exact = T)
calc_filedrawer(clt_sig, exact = F)
calc_filedrawer <- function(dat, exact = F) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(z)
#q <- qnorm(1 - alph)
q <- qnorm(1 - 0.001)
if (exact == F){
filedrawer <- (k * z_k / q)^2 - k
} else {
z_x <- -dnorm(q) / pnorm(q)
# filedrawer <- -((-q^2 + 2 * k * z_k * z_x) -
#                   q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
#                (2 * z_x^2)
filedrawer <- (-2 * k * z_k * z_x + q^2 -
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
calc_filedrawer(clt_sig, exact = T)
calc_filedrawer <- function(dat, exact = F) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(z)
#q <- qnorm(1 - alph)
q <- qnorm(1 - 0.00001)
if (exact == F){
filedrawer <- (k * z_k / q)^2 - k
} else {
z_x <- -dnorm(q) / pnorm(q)
# filedrawer <- -((-q^2 + 2 * k * z_k * z_x) -
#                   q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
#                (2 * z_x^2)
filedrawer <- (-2 * k * z_k * z_x + q^2 -
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
calc_filedrawer(clt_sig, exact = T)
calc_filedrawer(clt_sig, exact = F)
q
#q <- qnorm(1 - alph)
q <- qnorm(1 - 0.00001)
q
z_x <- -dnorm(q) / pnorm(q)
z_x
calc_filedrawer <- function(dat, exact = F) {
if (length(unique(dat$alpha)) > 1 | length(unique(dat$id)) > 1) {
stop("Only test results evaluated at the same alpha threshold
and based on the same evidence metric are permitted.")
} else {
alph <- dat$alpha[1]
}
z <- qnorm(dat$p, 0, 1, lower.tail = FALSE)
z_k <- mean(z)
k <- length(z)
q <- qnorm(1 - alph)
if (exact == F){
filedrawer <- (k * z_k / q)^2 - k
} else {
z_x <- -dnorm(q) / pnorm(q) # mean of truncated standard normal distribution
filedrawer <- (-2 * k * z_k * z_x + q^2 -
q * sqrt(4 * k * z_x^2 - 4 * k * z_k * z_x + q^2)) /
(2 * z_x^2)
}
return(filedrawer)
}
pnorm(2,2,1)
pnorm(2,3,1)
pnorm(-1,0,1)
help(sort)
norms <- rnorm(100,0,1)
mean(norms)
norms <- c(rnorm(100,0,1),rnorm(100,0,2),rnorm(100,0,3))
norms
mean(norms)
m1 <- mean(norms[1:100])
m2 <- mean(norms[101:200])
m3 <- mean(norms[201:300])
m1
m2
m3
mean(c(m1,m2,m3))
n <- c(100,100,100)
N <- 300
n_inv <- 1/n
sum(n_iv)
sum(n_inv)
n <- c(20,40,60)
n_inv <- 1/n
sum(n_inv)
sum(n_inv)/3
1/300
1/3*sum(n_inv)
1/sum(n)
sum(n)
sum(n_inv)
n2 <- c(10,10,10)
n2_inv <- 1/n2
sum(n2_inv)/4
sum(n2_inv)/3
1/sum(n2)
getwd()
getwd()
source('~/Tresorit_Local/EPFL_COMP_SC_ENG/MasterThesis/2019_StatisticalEvidence/3_Code/CodeMasterThesis/scripts/PublicationBias.R', echo=TRUE)
getwd()
